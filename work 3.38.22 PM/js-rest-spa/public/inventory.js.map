{"version":3,"file":"inventory.js","mappings":"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","sources":["webpack://js-rest-spa/./src/inventory.js"],"sourcesContent":["\"use strict\";\n(function() {\n\n   let stateInventories = {};\n\n  const MESSAGES = {\n    networkError: 'Trouble connecting to the network.  Please try again',\n    authInsufficient: \"Please only use letters and numbers for username and do not use 'dog' as username, no space before between and after username\",\n    requiredUsername: 'Your username is required to login',\n    noSuchQuantity: \"Quantity can only be number and not less than 0\",\n    default: 'Something went wrong.  Please try again',\n\n  };\n\n\n  checkForSession();\n  addAbilityToLogin();\n  addAbilityToLogout();\n  addAbilityToChangeQuantity();\n\n  function setLoggedIn( isLoggedIn ) {\n    if(isLoggedIn) {\n      renderLoggedInPage();\n    } else {    \n      renderNotLoggedInPage();\n      addAbilityToLogin();\n    }\n    renderStatus(\"\");  \n  }\n\n  function fetchSession() {\n    return fetch('/api/session', {\n      method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n\n  function checkForSession() {\n    fetchSession()\n    .then( populateInventories )\n    .catch( () => setLoggedIn(false) );\n  }\n\n  function renderOnLogin(inventories) {\n    stateInventories = inventories;\n    setLoggedIn(true);\n  }\n\n  function fetchLogin(username) {\n    return fetch('/api/session', {\n      method: 'POST',\n      headers: new Headers({\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify({ username }),\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n\n  function addAbilityToLogin() {\n    if(setLoggedIn){\n      const buttonEl = document.querySelector('.login button');\n      const usernameEl = document.querySelector('.login__username');     \n      if(!buttonEl || !usernameEl){\n        return;\n      }\n      buttonEl.addEventListener('click', (e) => {\n        const username = usernameEl.value;\n        usernameEl.value =\"\";\n        fetchLogin(username)\n        .then( renderOnLogin )\n        .catch( error => renderStatus(error) );\n      });\n    }\n    \n  }\n\n  function fetchLogout() {\n    return fetch('/api/session', {\n      method: 'DELETE',\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n\n  function addAbilityToLogout() {\n    const controlsEl = document.querySelector('.controls');\n    if(!controlsEl){\n      return;\n    }\n    controlsEl.addEventListener('click', (e) => {\n      stateInventories = {};\n      fetchLogout()\n      .then( () => setLoggedIn(false) )\n      .catch( error => renderStatus(error) );\n    });\n  }\n\n  function fetchInventories() {\n    return fetch('/api/inventories')\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n\n  function populateInventories() {\n    fetchInventories()\n    .then( rawInventories => {\n      stateInventories = rawInventories;\n      setLoggedIn(true);\n      renderLoggedInPage();\n      renderStatus('');\n    })\n    .catch( error => {\n      renderStatus(error);\n    });\n  }\n\n  function fetchUpdateInventory( id, inventoryUpdates ) {\n    return fetch(`/api/inventories/${id}`, {\n      method: 'PATCH',\n      headers: new Headers({\n        'content-type': 'application/json',\n      }),\n      \n      body: JSON.stringify( inventoryUpdates ),\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n\n  function addAbilityToChangeQuantity(){\n    const listEl = document.querySelector('.inventories');\n    if(!listEl){\n      return;\n    }\n    let quantityDetail = 0;\n    listEl.addEventListener('click',(e)=>{\n      const id = e.target.dataset.id;\n      if(e.target.classList.contains('addQuantity')){\n        quantityDetail = stateInventories[id].quantity +1;\n      }else if(e.target.classList.contains('subtractQuantity')){\n        if(stateInventories[id].quantity <= 0){\n          e.target.disabled = true;\n        }else{\n          quantityDetail = stateInventories[id].quantity -1;\n        }        \n      }else if(!e.target.classList.contains(\"inventory_detail\")){\n        return;\n      }\n      fetchUpdateInventory(id, { quantity: quantityDetail } )\n      .then( inventory => {\n        stateInventories[id] = inventory;\n        renderLoggedInPage();\n        renderStatus('');\n      })\n      .catch( err => {\n        renderStatus(err);\n      });\n      \n    })\n  }\n   \n  function renderLoggedInPage({ add } = {}){\n   const loginHtml = document.querySelector('.login');\n   loginHtml.innerHTML = \"\";\n\n   const inventoryHtml = Object.values(stateInventories).map( inventory => {\n    return `\n    <li class=\"inventory\" data-id=\"${inventory.id}\">\n      <label >\n        <span class=\"inventory_detail\" data-id=\"${inventory.id}\">${inventory.name}</span>   \n        <button class=\"inventory_detail subtractQuantity\" data-id=\"${inventory.id}\">-</button>\n        <span class=\"inventory_detail item-quantity\">${inventory.quantity}</span>\n        <button class=\"inventory_detail addQuantity\" data-id=\"${inventory.id}\">+</button> \n      </label>\n    </li>\n    `;\n  });\n\n   const inventoriesEl = document.querySelector(\".inventories\");  \n   inventoriesEl.innerHTML = inventoryHtml;\n   const logoutBtnHtml = ` \n      <button class=\"logout\">Logout</button>\n   `\n   \n   const controlsEl = document.querySelector(\".controls\");\n   if(!controlsEl){\n     return;\n   }else{\n    controlsEl.innerHTML = logoutBtnHtml;\n\n   }\n  \n   const childLi = Array.from(inventoriesEl.querySelectorAll(\"li\"));\n    childLi.map((child)=>{\n      const value = child.querySelector(\".item-quantity\").innerText;\n      if(value === \"0\"){\n        child.querySelector(\".subtractQuantity\").disabled = true;\n      }\n    })\n  }\n\n  function renderNotLoggedInPage(){\n    const loginHtml = `\n      <form action=\"#\" id=\"form_login\">\n        <label>\n          <span>Username:</span>\n          <input class=\"login__username\">\n        </label>\n        <button type=\"button\">Login</button>\n      </form>\n    `\n    const loginEl = document.querySelector('.login');\n    loginEl.innerHTML = loginHtml;\n\n    const inventoriesEl = document.querySelector(\".inventories\"); \n    inventoriesEl.innerHTML = \"\";\n    \n    const controlsEl = document.querySelector(\".controls\");\n    controlsEl.innerHTML = \"\";\n   \n  }\n\n  function renderStatus(message) {\n    const statusEl = document.querySelector('.status');\n    if( !message ) {\n      statusEl.innerText = '';\n      return;\n    }\n    const key = message?.error ? message.error : 'default';\n    statusEl.innerText = MESSAGES[key] || MESSAGES.default;\n  }\n\n})();"],"names":["stateInventories","MESSAGES","networkError","authInsufficient","requiredUsername","noSuchQuantity","checkForSession","addAbilityToLogin","addAbilityToLogout","addAbilityToChangeQuantity","setLoggedIn","isLoggedIn","renderLoggedInPage","renderNotLoggedInPage","renderStatus","fetchSession","fetch","method","Promise","reject","error","then","response","ok","json","err","populateInventories","renderOnLogin","inventories","fetchLogin","username","headers","Headers","body","JSON","stringify","buttonEl","document","querySelector","usernameEl","addEventListener","e","value","fetchLogout","controlsEl","fetchInventories","rawInventories","fetchUpdateInventory","id","inventoryUpdates","listEl","quantityDetail","target","dataset","classList","contains","quantity","disabled","inventory","add","loginHtml","innerHTML","inventoryHtml","Object","values","map","name","inventoriesEl","logoutBtnHtml","childLi","Array","from","querySelectorAll","child","innerText","loginEl","message","statusEl","key"],"sourceRoot":""}